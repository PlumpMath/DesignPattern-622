1.定义
	责任链模式是一种对象的行为模式。
	在责任链模式里，很多对象由每一个对象对其下家的引用而连接起来形成一条链。
	请求在这个链上传递，直到链上的某一个对象决定处理此请求。
	发出这个请求的客户端并不知道链上的哪一个对象最终处理这个请求，
	这使得系统可以在不影响客户端的情况下动态地重新组织和分配责任。
2.结构
	1.抽象抽象处理者(Handler)角色：定义出一个处理请求的接口。
	如果需要，接口可以定义 出一个方法以设定和返回对下家的引用。
	这个角色通常由一个Java抽象类或者Java接口实现。
	
	2.具体处理者(ConcreteHandler)角色：具体处理者接到请求后，可以选择将请求处理掉，
	或者将请求传给下家。由于具体处理者持有对下家的引用，因此，如果需要，具体处理者可以访问下家。
3.分类
	纯的与不纯的责任链模式
	一个纯的责任链模式要求一个具体的处理者对象只能在两个行为中选择一个：
	一是承担责任，二是把责任推给下家。不允许出现某一个具体处理者对象在承担了一部分责任后又 把责任向下传的情况。
	
	在一个纯的责任链模式里面，一个请求必须被某一个处理者对象所接收；
	在一个不纯的责任链模式里面，一个请求可以最终不被任何接收端对象所接收。
	纯的责任链模式的实际例子很难找到，一般看到的例子均是不纯的责任链模式的实现。
	有些人认为不纯的责任链根本不是责任链模式，这也许是有道理的。
	但是在实际的系统里，纯的责任链很难找到。如果坚持责任链不纯便不是责任链模式，那么责任链模式便不会有太大意义了。
4.优缺点
	优点：无非就是降低了耦合、提高了灵活性。
	缺点：可能会带来一些额外的性能损耗，因为它每次执行请求都要从链子开头开始遍历